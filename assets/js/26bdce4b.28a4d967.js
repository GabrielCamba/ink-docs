"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[9856],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),s=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},p=function(t){var e=s(t.components);return a.createElement(l.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,c(c({ref:e},p),{},{components:n})):a.createElement(h,c({ref:e},p))}));function h(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i[d]="string"==typeof t?t:r,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76689:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={title:"Install cargo-contract",slug:"/cargo-contract-cli"},c=void 0,i={unversionedId:"getting-started/cargo-contract",id:"version-5.x/getting-started/cargo-contract",title:"Install cargo-contract",description:"cargo-contract is a command-line (CLI) tool which helps you set up and manage",source:"@site/versioned_docs/version-5.x/getting-started/cargo-contract.md",sourceDirName:"getting-started",slug:"/cargo-contract-cli",permalink:"/5.x/cargo-contract-cli",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/versioned_docs/version-5.x/getting-started/cargo-contract.md",tags:[],version:"5.x",frontMatter:{title:"Install cargo-contract",slug:"/cargo-contract-cli"}},l={},s=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],p={toc:s},d="wrapper";function u(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cargo-contract")," is a command-line (CLI) tool which helps you set up and manage\nWebAssembly smart contracts written with ink!.\nYou can find it ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/cargo-contract"},"here on GitHub"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/cargo-contract"},"here on crates.io"),"."),(0,r.kt)("p",null,"The tool has a number of handy capabilities:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ cargo contract       \nUtilities to develop Wasm smart contracts\n\nUsage: cargo contract <COMMAND>\n\nCommands:\n  new          Setup and create a new smart contract project\n  build        Compiles the contract, generates metadata, bundles both together in a `<name>.contract` file\n  check        Check that the code builds as Wasm; does not output any `<name>.contract` artifact to the `target/` directory\n  test         Test the smart contract off-chain\n  upload       Upload contract code\n  instantiate  Instantiate a contract\n  call         Call a contract\n  decode       Decodes a contracts input or output data (supplied in hex-encoding)\n  help         Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help     Print help information\n  -V, --version  Print version information\n")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Please see the installation instructions in the ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo-contract")," repository ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/cargo-contract#installation"},"here"),"."),(0,r.kt)("p",null,"You can then use ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo contract --help")," to start exploring the commands made available to you."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"In order to initialize a new ink! project you can use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo contract new flipper\n")),(0,r.kt)("p",null,"This will create a folder ",(0,r.kt)("inlineCode",{parentName:"p"},"flipper")," in your work directory.\nThe folder contains a scaffold ",(0,r.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"lib.rs"),", which both contain the necessary building blocks for using ink!."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"lib.rs")," contains our hello world contract \u2012 the ",(0,r.kt)("inlineCode",{parentName:"p"},"Flipper"),", which we explain in the next section."),(0,r.kt)("p",null,"In order to build the contract just execute these commands in the ",(0,r.kt)("inlineCode",{parentName:"p"},"flipper")," folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo contract build\n")),(0,r.kt)("p",null,"As a result you'll get the file ",(0,r.kt)("inlineCode",{parentName:"p"},"target/flipper.contract"),". It's a JSON which bundles the contract's\nmetadata and its Wasm blob. This file needs to be used when deploying the contract.\nYou additionally get the individual ",(0,r.kt)("inlineCode",{parentName:"p"},"target/flipper.wasm")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"target/flipper.json")," in the folder as well."))}u.isMDXComponent=!0}}]);