"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[7526],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,v=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(v,s(s({ref:t},u),{},{components:n})):r.createElement(v,s({ref:t},u))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},12411:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"useTxEvents",description:"React hook for collecting and caching events emitted when a transaction is `In Block`"},s="useTxEvents",c={unversionedId:"frontend/react/hooks/contracts/use-tx-events",id:"frontend/react/hooks/contracts/use-tx-events",title:"useTxEvents",description:"React hook for collecting and caching events emitted when a transaction is `In Block`",source:"@site/docs/frontend/react/hooks/contracts/use-tx-events.md",sourceDirName:"frontend/react/hooks/contracts",slug:"/frontend/react/hooks/contracts/use-tx-events",permalink:"/frontend/react/hooks/contracts/use-tx-events",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/react/hooks/contracts/use-tx-events.md",tags:[],version:"current",frontMatter:{title:"useTxEvents",description:"React hook for collecting and caching events emitted when a transaction is `In Block`"},sidebar:"reference",previous:{title:"useEvents",permalink:"/frontend/react/hooks/contracts/use-events"},next:{title:"useMetadata",permalink:"/frontend/react/hooks/contracts/use-metadata"}},i={},l=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usetxevents"},"useTxEvents"),(0,a.kt)("p",null,"React hook for collecting and caching events emitted when a transaction is ",(0,a.kt)("inlineCode",{parentName:"p"},"In Block"),".\nThis differs from ",(0,a.kt)("a",{parentName:"p",href:"/frontend/react/hooks/contracts/use-events"},"useEvents"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"useEvents"),"\nwill subscribe to any events emitted by a contract. ",(0,a.kt)("inlineCode",{parentName:"p"},"useTxEvents")," accepts a transaction as\nan argument and will collect and cache the events emitted by that single transaction only.\nThis is used internally in transaction hooks, which will already provide ",(0,a.kt)("inlineCode",{parentName:"p"},"events")," as state."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/paritytech/useink/blob/0f44e1b0eee56cb2724a5b39edfc73937b8c4677/packages/useink/src/react/hooks/contracts/useDeployer/useDeployer.ts#L45"},"useage inside of the useink library"),"."),(0,a.kt)("h2",{id:"return-value"},"Return Value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  resetState: () => void;\n  events: EventRecord[];\n}\n")))}d.isMDXComponent=!0}}]);