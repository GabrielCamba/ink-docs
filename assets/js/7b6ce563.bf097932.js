"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[7045],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=l(n),f=o,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,s(s({ref:t},c),{},{components:n})):r.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=f;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[u]="string"==typeof e?e:o,s[1]=a;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},62033:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const i={title:"Types",description:"Common types for front end development"},s="Types",a={unversionedId:"frontend/utils/types",id:"frontend/utils/types",title:"Types",description:"Common types for front end development",source:"@site/docs/frontend/utils/types.mdx",sourceDirName:"frontend/utils",slug:"/frontend/utils/types",permalink:"/frontend/utils/types",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/utils/types.mdx",tags:[],version:"current",frontMatter:{title:"Types",description:"Common types for front end development"},sidebar:"reference",previous:{title:"tx Helpers",permalink:"/frontend/utils/tx-utils"},next:{title:"bnToBalance",permalink:"/frontend/utils/substrate/bn-to-balance"}},p={},l=[{value:"RustResult&lt;T, E&gt;",id:"rustresultt-e",level:2}],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"types"},"Types"),(0,o.kt)("h2",{id:"rustresultt-e"},"RustResult<T, E>"),(0,o.kt)("p",null,"This type models a ",(0,o.kt)("inlineCode",{parentName:"p"},"Result<T, E>")," message response in ink! contracts starting in v4.0.0.\nPrior to ink! v4.0.0 any contract that returned a ",(0,o.kt)("inlineCode",{parentName:"p"},"Result<T, E>")," in Rust would return ",(0,o.kt)("inlineCode",{parentName:"p"},"T"),"\nor undefined. See ",(0,o.kt)("a",{parentName:"p",href:"/frontend/utils/pick#pickresultok"},"pickResultOk")," and\n",(0,o.kt)("a",{parentName:"p",href:"/frontend/utils/pick#pickresultErr"},"pickResultErr"),", which can be used with contracts that\nreturn a ",(0,o.kt)("inlineCode",{parentName:"p"},"Result<T, E>"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"type RustResult<T, E> = { Ok?: T; Err?: E };")))}d.isMDXComponent=!0}}]);