"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[7105],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>m});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},d=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),f=o,m=u["".concat(i,".").concat(f)]||u[f]||p[f]||a;return t?n.createElement(m,c(c({ref:r},d),{},{components:t})):n.createElement(m,c({ref:r},d))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=f;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[u]="string"==typeof e?e:o,c[1]=s;for(var l=2;l<a;l++)c[l]=t[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},49391:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(87462),o=(t(67294),t(3905));const a={title:"decodeError",hide_title:!0,description:"Return an error message for a RegistryError if it exists."},c="decodeError",s={unversionedId:"frontend/core/contracts/decode-error",id:"frontend/core/contracts/decode-error",title:"decodeError",description:"Return an error message for a RegistryError if it exists.",source:"@site/docs/frontend/core/contracts/decode-error.md",sourceDirName:"frontend/core/contracts",slug:"/frontend/core/contracts/decode-error",permalink:"/frontend/core/contracts/decode-error",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/core/contracts/decode-error.md",tags:[],version:"current",frontMatter:{title:"decodeError",hide_title:!0,description:"Return an error message for a RegistryError if it exists."},sidebar:"reference",previous:{title:"decodeCallResult",permalink:"/frontend/core/contracts/decode-call-result"},next:{title:"getRegistryError",permalink:"/frontend/core/contracts/get-registry-error"}},i={},l=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Return Type",id:"return-type",level:2}],d={toc:l},u="wrapper";function p(e){let{components:r,...t}=e;return(0,o.kt)(u,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"decodeerror"},"decodeError"),(0,o.kt)("p",null,'A function to easily check for an error emitted from a pallet, a.k.a. a "registry error",\nand return a string. This is used heavily throughout ',(0,o.kt)("strong",{parentName:"p"},"useink"),". See ",(0,o.kt)("a",{parentName:"p",href:"/"},"example use\nhere"),". See ",(0,o.kt)("a",{parentName:"p",href:"https://polkadot.js.org/docs/substrate/errors"},"this list of common pallet\nerrors")," you may want to check for."),(0,o.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { call, decodeError } from 'useink/core';\nconst result = await call(chainContract, ...additionalArgs);\n\nconst err = decodeError(\n  result, \n  chainContract,\n  { \n    ContractTrapped: 'Something blew up in the contract',\n    OutOfGas: 'The call ran are out of gas',\n    // See https://polkadot.js.org/docs/substrate/errors for a list of more errors\n    // you may want to check for.\n  },\n  'Something went wrong. This is a default error.'\n);\n\nconsole.error(err);\n")),(0,o.kt)("h2",{id:"return-type"},"Return Type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"string | undefined\n")))}p.isMDXComponent=!0}}]);