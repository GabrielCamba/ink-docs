"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[1950],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,y=p["".concat(i,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(y,s(s({ref:t},u),{},{components:n})):r.createElement(y,s({ref:t},u))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=f;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},31032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={title:"useDeployer",description:"A React hook for deploying a contract from a Wasm blob or code hash."},s="useDeployer",c={unversionedId:"frontend/react/hooks/contracts/use-deployer",id:"frontend/react/hooks/contracts/use-deployer",title:"useDeployer",description:"A React hook for deploying a contract from a Wasm blob or code hash.",source:"@site/docs/frontend/react/hooks/contracts/use-deployer.md",sourceDirName:"frontend/react/hooks/contracts",slug:"/frontend/react/hooks/contracts/use-deployer",permalink:"/es/frontend/react/hooks/contracts/use-deployer",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/react/hooks/contracts/use-deployer.md",tags:[],version:"current",frontMatter:{title:"useDeployer",description:"A React hook for deploying a contract from a Wasm blob or code hash."},sidebar:"reference",previous:{title:"useContract",permalink:"/es/frontend/react/hooks/contracts/use-contract"},next:{title:"useDryRun",permalink:"/es/frontend/react/hooks/contracts/use-dry-run"}},i={},l=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usedeployer"},"useDeployer"),(0,o.kt)("p",null,"A React hook for deploying a contract from a Wasm blob or code hash."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paritytech/useink/blob/main/playground/src/components/pg-deploy/DeployPage.tsx"},"example in the playground dApp"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useDeployer } from 'useink'\n\nexport const DeployPage: React.FC = () => {\n  // Optionally pass in a ChainId to deploy to another chain. \n  // e.g. `useDeployer('shibuya-testnet')`.\n  // ChainId must be configured in your UseInkProvider config props.\n  const D = useDeployer();\n  // The code to load metadata this is omitted from this example. See useMetata docs.\n  const M = useMetadata(); \n\n  return (\n    <>\n      {D.isSubmitting && <p>Submitting...</p>}\n      {D.error && <p>{D.error}</p>}\n\n      <button onClick={D.dryRun(M.abi, 'new')}>Dry Run</button>\n      <button onClick={D.signAndSubmit(M.abi, 'new')}>Deploy</button>\n    </>\n  );\n};\n")),(0,o.kt)("h2",{id:"return-value"},"Return Value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  dryRun: DeploySignAndSend<Promise<DeployTx | undefined>>;\n  signAndSend: DeploySignAndSend<Promise<void>>;\n  contractAddress: string | undefined;\n  status: TransactionStatus;\n  result: ContractSubmittableResult | undefined;\n  isSubmitting: boolean;\n  error: string | undefined;\n  resetState: () => void;\n  gasConsumed?: WeightV2;\n  gasRequired?: WeightV2;\n  storageDeposit?: StorageDeposit;\n  willBeSuccessful: boolean;\n  events: EventRecord[];\n}\n")))}d.isMDXComponent=!0}}]);