"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[9946],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81903:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"Contract Debugging",slug:"/basics/contract-debugging",hide_title:!0},i=void 0,l={unversionedId:"basics/debugging",id:"version-5.x/basics/debugging",title:"Contract Debugging",description:"Actualmente existen tres maneras de debuggear tu contrato ink!:",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-5.x/basics/debugging.md",sourceDirName:"basics",slug:"/basics/contract-debugging",permalink:"/es/5.x/basics/contract-debugging",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/versioned_docs/version-5.x/basics/debugging.md",tags:[],version:"5.x",frontMatter:{title:"Contract Debugging",slug:"/basics/contract-debugging",hide_title:!0},sidebar:"reference",previous:{title:"Testing del Contrato",permalink:"/es/5.x/basics/contract-testing"},next:{title:"Contract Verification",permalink:"/es/5.x/basics/verification/contract-verification"}},s={},c=[{value:"\xbfC\xf3mo imprimo algo en la consola desde el runtime?",id:"c\xf3mo-imprimo-algo-en-la-consola-desde-el-runtime",level:3},{value:"Ejemplo",id:"ejemplo",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("img",{src:"/img/title/magnifying-glass.svg",className:"titlePic"}),(0,a.kt)("h1",{id:"debugging-del-contrato"},"Debugging del Contrato"),(0,a.kt)("p",null,"Actualmente existen tres maneras de debuggear tu contrato ink!:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Puedes escribir test utilizando uno de los mecanismos descritos en la p\xe1gina ",(0,a.kt)("a",{parentName:"li",href:"/basics/contract-testing"},"Testing del Contrato"),"."),(0,a.kt)("li",{parentName:"ul"},"Puedes interactuar con tu contrato via UI o l\xednea de comandos. Esto est\xe1 descrito en\nla p\xe1gina ",(0,a.kt)("a",{parentName:"li",href:"/getting-started/calling-your-contract"},"Ejecute su Contrato"),"."),(0,a.kt)("li",{parentName:"ul"},"Puedes imprimir declaraciones de la depuraci\xf3n en su contrato. Estas apareceran en el nodo de Substrate ",(0,a.kt)("inlineCode",{parentName:"li"},"stdout"),". Esto est\xe1 descrito en esta p\xe1gina.")),(0,a.kt)("h3",{id:"c\xf3mo-imprimo-algo-en-la-consola-desde-el-runtime"},"\xbfC\xf3mo imprimo algo en la consola desde el runtime?"),(0,a.kt)("p",null,"Puedes elegir entre estos dos macros:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.rs/ink_env/4.0.0/ink_env/macro.debug_println.html"},(0,a.kt)("inlineCode",{parentName:"a"},"ink::env::debug_println!"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.rs/ink_env/4.0.0/ink_env/macro.debug_print.html"},(0,a.kt)("inlineCode",{parentName:"a"},"ink::env::debug_print!")))),(0,a.kt)("p",null,"Tienes que hacer tres cosas para poder mostrar en la consola los mensajes de debug:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Permitir la feature ",(0,a.kt)("inlineCode",{parentName:"strong"},"pallet-contracts/unstable-interface")," en el runtime."),(0,a.kt)("br",null),"\nPara ",(0,a.kt)("inlineCode",{parentName:"p"},"substrate-contracts-node")," esto esta hecho por defecto ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate-contracts-node/blob/master/runtime/Cargo.toml"},"aqu\xed"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Permitir la feature ",(0,a.kt)("inlineCode",{parentName:"strong"},"ink-debug")," para el crate ",(0,a.kt)("inlineCode",{parentName:"strong"},"ink_env"),"."),(0,a.kt)("br",null),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"cargo-contract")," hace esto automaticamente para ti (para versiones ",(0,a.kt)("inlineCode",{parentName:"p"},">= 0.13.0"),"), excepto si compilas un contrato en modo ",(0,a.kt)("inlineCode",{parentName:"p"},"--release"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Establecer el nivel de log de su nodo en ",(0,a.kt)("inlineCode",{parentName:"strong"},"runtime::contracts=debug"),"."),(0,a.kt)("br",null),"\nPor ejemplo, para que aparezcan solo los errores y el output del debug en el ",(0,a.kt)("inlineCode",{parentName:"p"},"substrate-contracts-node"),":"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"substrate-contracts-node -lerror,runtime::contracts=debug\n")))),(0,a.kt)("h2",{id:"ejemplo"},"Ejemplo"),(0,a.kt)("p",null,"El siguiente c\xf3digo muestra c\xf3mo imprimir declaraciones de depuraci\xf3n desde un mensaje o un constructor."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[ink(constructor)]\nfn new() -> Self {\n    ink::env::debug_println!("created new instance at {}", Self::env().block_number());\n    Self { }\n}\n\n#[ink(message)]\nfn print(&self) {\n   let caller = self.env().caller();\n   let message = ink_prelude::format!("got a call from {:?}", caller);\n   ink::env::debug_println!(&message);\n}\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"El debug output no se imprime para transaciones!"),(0,a.kt)("p",{parentName:"admonition"},"Solo se imprime para llamadas RPC o tests off-chain.")))}m.isMDXComponent=!0}}]);