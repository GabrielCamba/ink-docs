"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[4592],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},93236:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const o={title:"Introducci\xf3n",slug:"/datastructures/overview",hide_title:!0},i=void 0,s={unversionedId:"datastructures/overview",id:"datastructures/overview",title:"Introducci\xf3n",description:"El crate ink_storage funciona como la librer\xeda de almacenamiento est\xe1ndar para los smart contracts de ink!. Por el momento provee dos primitivas para interactuar con el storage,",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/datastructures/overview.md",sourceDirName:"datastructures",slug:"/datastructures/overview",permalink:"/es/datastructures/overview",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/datastructures/overview.md",tags:[],version:"current",frontMatter:{title:"Introducci\xf3n",slug:"/datastructures/overview",hide_title:!0},sidebar:"reference",previous:{title:"#[ink::chain_extension]",permalink:"/es/macros-attributes/chain-extension"},next:{title:"Trabajando con Mapping",permalink:"/es/datastructures/mapping"}},c={},l=[],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("img",{src:"/img/title/storage.svg",className:"titlePic"}),(0,n.kt)("h1",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,n.kt)("p",null,"El crate ",(0,n.kt)("inlineCode",{parentName:"p"},"ink_storage")," funciona como la librer\xeda de almacenamiento est\xe1ndar para los smart contracts de ink!. Por el momento provee dos primitivas para interactuar con el storage,\n",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/ink_storage/4.0.0/ink_storage/struct.Mapping.html"},(0,n.kt)("inlineCode",{parentName:"a"},"Mapping")),"\ny ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/ink_storage/4.0.0/ink_storage/struct.Lazy"},(0,n.kt)("inlineCode",{parentName:"a"},"Lazy")),"."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Mapping")," es un map de pares key-value directamente en el storage del contrato. Es muy similar a las hash tables y comparable al tipo ",(0,n.kt)("inlineCode",{parentName:"p"},"mapping")," que ofrece Solidity. Como un ingrediente esencial del lenguaje ink!, su principal ventaja es ser simple y liviano: favorece el ser eficiente en t\xe9rminos de costo de gas y tama\xf1o de c\xf3digo por sobre proveer muchas funcionalidades de alto nivel encontradas en otras implementaciones como el tipo ",(0,n.kt)("inlineCode",{parentName:"p"},"ink::prelude::collections::HashMap"),". En general, el ",(0,n.kt)("inlineCode",{parentName:"p"},"Mapping")," de ink! ser\xe1 una elecci\xf3n s\xf3lida para la mayor\xeda de los contratos. Adem\xe1s, los desarrolladores de smart contracts pueden implementar funcionalidades avanzadas por s\xed mismos."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Lazy")," es un tipo de wrapper que puede ser usado sobre cualquier otro tipo de storage compatible. Esto permite a los desarrolladores de smart contracts tener un control manual m\xe1s fino sobre la estructura del storage del contrato al asignar una celda diferente para cada campo. Por ejemplo, puede ser usado para prevenir la carga anticipada de grandes campos del storage durante cada llamada al contrato.\nPosiblemente, podr\xeda ser deseable cambiar algunos aspectos sobre c\xf3mo su smart contract maneja las variables del storage. Puedes encontrar m\xe1s informaci\xf3n sobre esto en la secci\xf3n sobre la ",(0,n.kt)("a",{parentName:"p",href:"https://use.ink/datastructures/storage-layout"},"Estructura del Storage")," en ink!."))}d.isMDXComponent=!0}}]);