"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[2079],{3905:(n,e,t)=>{t.d(e,{Zo:()=>d,kt:()=>f});var a=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,o=function(n,e){if(null==n)return{};var t,a,o={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var c=a.createContext({}),l=function(n){var e=a.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},d=function(n){var e=l(n.components);return a.createElement(c.Provider,{value:e},n.children)},p="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,o=n.mdxType,r=n.originalType,c=n.parentName,d=s(n,["components","mdxType","originalType","parentName"]),p=l(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||r;return t?a.createElement(f,i(i({ref:e},d),{},{components:t})):a.createElement(f,i({ref:e},d))}));function f(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var r=t.length,i=new Array(r);i[0]=m;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=n,s[p]="string"==typeof n?n:o,i[1]=s;for(var l=2;l<r;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},19986:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=t(87462),o=(t(67294),t(3905));const r={title:"Getting Started",slug:"/frontend/chains",description:"A collection of hundreds of Chain configurations"},i="Getting Started",s={unversionedId:"frontend/chains/getting-started",id:"frontend/chains/getting-started",title:"Getting Started",description:"A collection of hundreds of Chain configurations",source:"@site/docs/frontend/chains/getting-started.mdx",sourceDirName:"frontend/chains",slug:"/frontend/chains",permalink:"/es/frontend/chains",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/chains/getting-started.mdx",tags:[],version:"current",frontMatter:{title:"Getting Started",slug:"/frontend/chains",description:"A collection of hundreds of Chain configurations"},sidebar:"reference",previous:{title:"chainTokenSymbol",permalink:"/es/frontend/core/substrate/chain-token-symbol"},next:{title:"Chain Configurations",permalink:"/es/frontend/chains/configurations"}},c={},l=[{value:"Installation",id:"installation",level:2},{value:"Configure tsconfig.json",id:"configure-tsconfigjson",level:2},{value:"Chain Type Definition",id:"chain-type-definition",level:2},{value:"Example: RococoContractsTestnet",id:"example-rocococontractstestnet",level:3},{value:"Example: Astar",id:"example-astar",level:3}],d={toc:l},p="wrapper";function u(n){let{components:e,...t}=n;return(0,o.kt)(p,(0,a.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useink/chains")," is an extension of ",(0,o.kt)("strong",{parentName:"p"},"useink")," that provides hundreds of chain\nconfigurations. Configurations are necessary to set up core ",(0,o.kt)("strong",{parentName:"p"},"useink")," React hooks and\ndisplay user-facing content. They contain RPC urls, links to block explorers, official\nwebsites, and metadata QR codes, and contain native token information, and more. "),(0,o.kt)("p",null,"It is important to note that most of these chains do not implement\n",(0,o.kt)("a",{parentName:"p",href:"https://paritytech.github.io/substrate/master/pallet_contracts/pallet/struct.Pallet.html"},"pallet-contracts"),",\nand therefore do not support ink! contracts, but many of the features in ",(0,o.kt)("strong",{parentName:"p"},"useink")," are\ncompatible with all of these chains. We have added them here for convenience. In addition,\nmany chains are in the process of adding pallet-contracts as they adopt the ",(0,o.kt)("a",{parentName:"p",href:"https://www.rob.tech/blog/hybrid-chains/"},"hybrid chain\ndesign"),", so we expect more and more\ncompatibility with the ",(0,o.kt)("strong",{parentName:"p"},"useink")," library in the near future."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"You must first ",(0,o.kt)("a",{parentName:"p",href:"/frontend/getting-started#installation"},"install useink"),"."),(0,o.kt)("h2",{id:"configure-tsconfigjson"},"Configure tsconfig.json"),(0,o.kt)("p",null,"Set ",(0,o.kt)("inlineCode",{parentName:"p"},"moduleResolution")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"nodenext")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"bundler")," inside of your ",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),". This\nfeature allows your application to discover the ",(0,o.kt)("inlineCode",{parentName:"p"},"useink/chains")," import paths defined in\nthe ",(0,o.kt)("strong",{parentName:"p"},"useink")," ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "moduleResolution": "nodenext", // or `bundler`\n  }\n}\n')),(0,o.kt)("p",null,"You can now import any of the chain configurations in ",(0,o.kt)("inlineCode",{parentName:"p"},"useink/chains"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Example\nimport { RococoContractsTestnet, ShibuyaTestnet } from 'useink/chains';\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/frontend/getting-started#configuration"},"See useink Configuration")," to learn how these are\nused in a React app built with ",(0,o.kt)("strong",{parentName:"li"},"useink"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/frontend/chains/configurations"},"See Chain Configurations")," for a list of all available configurations.")),(0,o.kt)("h2",{id:"chain-type-definition"},"Chain Type Definition"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface Chain {\n  id: ChainId; // See https://use.ink/frontend/chains/chain-id for a list of all possible values.\n  name: string;\n  account: '*25519' | 'secp256k1' | 'Sr25519';\n  subscanUrl?: string;\n  overrideNativeTokenId?: string;\n  chainspecQrUrl?: string;\n  latestMetadataQrUrl?: string;\n  rpcs: readonly `ws://${string}` | `wss://${string}`[];\n  coingeckoId?: string | null;\n  paraId?: number;\n  relay?: {\n    id: string;\n  };\n  balanceModuleConfigs?: {\n    [k: string]: {\n      disable?: boolean;\n      tokens?: readonly (Token | TokenAsset)[];\n    };\n  };\n}\n\ninterface Token {\n  symbol: string;\n  decimals: number;\n  // existentialDeposit is the minimum amount an account must hold to stay alive.\n  // Balances held below this amount will be removed from storage\n  existentialDeposit: string;\n  // onChainId is the ID for a token in the pallet\n  onChainId: string | number;\n  coingeckoId?: string;\n}\n\ninterface TokenAsset {\n  assetId: string | number;\n  symbol: string;\n  coingeckoId?: string;\n}\n")),(0,o.kt)("h3",{id:"example-rocococontractstestnet"},"Example: RococoContractsTestnet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const RococoContractsTestnet: Chain = {\n  id: 'rococo-contracts-testnet',\n  name: 'Contracts',\n  account: '*25519',\n  rpcs: ['wss://rococo-contracts-rpc.polkadot.io'],\n  paraId: 1002,\n  relay: { id: 'rococo-testnet' },\n};\n")),(0,o.kt)("h3",{id:"example-astar"},"Example: Astar"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export const Astar: Chain = {\n  id: 'astar',\n  name: 'Astar',\n  account: '*25519',\n  subscanUrl: 'https://astar.subscan.io/',\n  chainspecQrUrl: 'https://metadata.novasama.io/qr/astar_specs.png',\n  latestMetadataQrUrl:\n    'https://metadata.novasama.io/qr/astar_metadata_latest.apng',\n  rpcs: [\n    'wss://rpc.astar.network',\n    'wss://astar.public.blastapi.io',\n    'wss://astar-rpc.dwellir.com',\n    'wss://astar.api.onfinality.io/public-ws',\n    'wss://astar.public.curie.radiumblock.co/ws',\n    'wss://public-rpc.pinknode.io/astar',\n    'wss://1rpc.io/astr',\n  ],\n  paraId: 2006,\n  relay: { id: 'polkadot' },\n  balanceModuleConfigs: {\n    'substrate-assets': {\n      tokens: [\n        { assetId: '4294969280', symbol: 'USDT', coingeckoId: 'tether' },\n        {\n          assetId: '18446744073709551616',\n          symbol: 'ACA',\n          coingeckoId: 'acala',\n        },\n        {\n          assetId: '18446744073709551617',\n          symbol: 'AUSD',\n          coingeckoId: 'acala-dollar',\n        },\n        {\n          assetId: '18446744073709551618',\n          symbol: 'LDOT',\n          coingeckoId: 'liquid-staking-dot',\n        },\n        {\n          assetId: '18446744073709551619',\n          symbol: 'GLMR',\n          coingeckoId: 'moonbeam',\n        },\n        {\n          assetId: '18446744073709551620',\n          symbol: 'IBTC',\n          coingeckoId: 'interbtc',\n        },\n        {\n          assetId: '18446744073709551621',\n          symbol: 'INTR',\n          coingeckoId: 'interlay',\n        },\n        { assetId: '18446744073709551622', symbol: 'PHA', coingeckoId: 'pha' },\n        {\n          assetId: '18446744073709551623',\n          symbol: 'BNC',\n          coingeckoId: 'bifrost-native-coin',\n        },\n        { assetId: '18446744073709551624', symbol: 'VDOT' },\n        { assetId: '18446744073709551625', symbol: 'CLV' },\n        { assetId: '18446744073709551626', symbol: 'VSDOT' },\n        {\n          assetId: '18446744073709551627',\n          symbol: 'RING',\n          coingeckoId: 'darwinia-network-native-token',\n        },\n        {\n          assetId: '18446744073709551628',\n          symbol: 'EQ',\n          coingeckoId: 'equilibrium-token',\n        },\n        { assetId: '18446744073709551629', symbol: 'EQD' },\n        {\n          assetId: '340282366920938463463374607431768211455',\n          symbol: 'DOT',\n          coingeckoId: 'polkadot',\n        },\n      ],\n    },\n  },\n}\n")))}u.isMDXComponent=!0}}]);