"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[2954],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),s=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(i.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,g=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(g,l(l({ref:n},u),{},{components:t})):a.createElement(g,l({ref:n},u))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=m;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[d]="string"==typeof e?e:r,l[1]=c;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},81311:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const o={title:"Ejecute su Contrato",slug:"/getting-started/calling-your-contract"},l=void 0,c={unversionedId:"getting-started/calling",id:"getting-started/calling",title:"Ejecute su Contrato",description:"Ahora que se ha desplegado su contrato, podremos interactuar con \xe9l! Flipper solo tiene dos funciones,",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/getting-started/calling.md",sourceDirName:"getting-started",slug:"/getting-started/calling-your-contract",permalink:"/es/getting-started/calling-your-contract",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/getting-started/calling.md",tags:[],version:"current",frontMatter:{title:"Ejecute su Contrato",slug:"/getting-started/calling-your-contract"},sidebar:"reference",previous:{title:"Desplega tu Contrato",permalink:"/es/getting-started/deploy-your-contract"},next:{title:"Troubleshooting",permalink:"/es/getting-started/troubleshooting"}},i={},s=[{value:"Llamadas RPC vs. Transacciones",id:"llamadas-rpc-vs-transacciones",level:2},{value:"Dry-run via RPC",id:"dry-run-via-rpc",level:3},{value:"Mutar el estado enviando transacciones",id:"mutar-el-estado-enviando-transacciones",level:3},{value:"Usando la UI de Contracts",id:"usando-la-ui-de-contracts",level:2},{value:"1. funci\xf3n get()",id:"1-funci\xf3n-get",level:3},{value:"2. funci\xf3n flip()",id:"2-funci\xf3n-flip",level:3},{value:"Usando <code>cargo-contract</code>",id:"usando-cargo-contract",level:2},{value:"1. funci\xf3n <code>get()</code>",id:"1-funci\xf3n-get-1",level:3},{value:"2. funci\xf3n <code>flip()</code>",id:"2-funci\xf3n-flip-1",level:3}],u={toc:s},d="wrapper";function p(e){let{components:n,...o}=e;return(0,r.kt)(d,(0,a.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Ahora que se ha desplegado su contrato, podremos interactuar con \xe9l! Flipper solo tiene dos funciones,\n",(0,r.kt)("inlineCode",{parentName:"p"},"flip()")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," por lo que vamos a ver como jugar con ambas."),(0,r.kt)("h2",{id:"llamadas-rpc-vs-transacciones"},"Llamadas RPC vs. Transacciones"),(0,r.kt)("p",null,"Hay dos maneras de llamar a un contrato:"),(0,r.kt)("h3",{id:"dry-run-via-rpc"},"Dry-run via RPC"),(0,r.kt)("p",null,"Remote procedure calls, o m\xe9todos RPC, son una manera de que un programa externo - por ejemplo, un\nnavegador or una aplicaci\xf3n front-end - de comunicarse con un nodo Substrate.\nPor ejemplo, usar\xe1s un m\xe9todo RPC para leer un valor almacenado, enviar una transacci\xf3n, o\npedir informaci\xf3n sobre la cadena a la que un nodo est\xe1 conectado."),(0,r.kt)("p",null,"Si una interfaz muestra el valor de un contrato (por ejemplo, el balance de una cuenta\nen un contrato ERC-20), entonces esto es algo que t\xedpicamente se hace mediante RPC.\nM\xe1s espeficicamente se hace ejecutando un dry-run s\xedncrono del m\xe9todo del contrato y\ndevolviendo el resultado.\nEs siguiente esquema muestra esto."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Contract dry-run via RPC",src:t(99973).Z,width:"1780",height:"1000"})),(0,r.kt)("p",null,"Las llamadas RPC no requieren de ninguna token, simplemente una conexi\xf3n a un nodo\nde la red. Es importante hacer enfasis en que la ejecuc\xf3n no conllevar\xe1 ninguna modificaci\xf3n\ndel estado de la blockchain, es simplemente un dry-run."),(0,r.kt)("h3",{id:"mutar-el-estado-enviando-transacciones"},"Mutar el estado enviando transacciones"),(0,r.kt)("p",null,'La otra manera de ejecutar una llamada a un contrato es enviando una transacci\xf3n\non-chain. Esto require tokens de la red para pagar los costes de dicha transacci\xf3n.\nEsta ser\xe1 incluida en la "transaction-pool" y entonces procesada as\xedncronamente.\nDurante el env\xedo de la transacci\xf3n ning\xfan resultado ser\xe1 disponible. Esto es diferente\na una llamada RPC.'),(0,r.kt)("p",null,"El patr\xf3n usual de c\xf3mo un cliente puede reconocer el resultado tras una llamada es que\nel contrato emitir\xe1 un evento y el cliente escuchar\xe1 activamente por este tipo de eventos.\nT\xedpicamente librer\xedas (como ",(0,r.kt)("inlineCode",{parentName:"p"},"polkadot-js/api"),") proveen APIs que hacen justo esto.\nLo importante es que los desarrolladores de contratos tienen que asegurarse de que\nlos eventos sean emitidos si quieren que los clientes sean capaces de hacer el seguimiento."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Contract execution via transaction",src:t(5885).Z,width:"1780",height:"1000"})),(0,r.kt)("h2",{id:"usando-la-ui-de-contracts"},"Usando la UI de Contracts"),(0,r.kt)("h3",{id:"1-funci\xf3n-get"},"1. funci\xf3n get()"),(0,r.kt)("p",null,"Establecemos el valor inicial del contrato Flipper\n",(0,r.kt)("inlineCode",{parentName:"p"},"value")," a ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," cuendo instanciemos el contrato. Comprobemos que este es el caso."),(0,r.kt)("p",null,"El la secci\xf3n ",(0,r.kt)("strong",{parentName:"p"},"Message to Send"),', selecciona el mensaje "',(0,r.kt)("strong",{parentName:"p"},"get(): bool"),'" y acepta los valores por defecto para el resto de opciones.'),(0,r.kt)("p",null,"Pulsa ",(0,r.kt)("strong",{parentName:"p"},'"Read"')," y confirma que el valor que te devuelve sea ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"An image of Flipper RPC call with false",src:t(69456).Z,width:"2750",height:"1952"})),(0,r.kt)("h3",{id:"2-funci\xf3n-flip"},"2. funci\xf3n flip()"),(0,r.kt)("p",null,"Vamos a cambiar el valor a ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," ahora!"),(0,r.kt)("p",null,"El mensaje alternativo para enviar con la UI es ",(0,r.kt)("inlineCode",{parentName:"p"},"flip()"),". Otra vez, acepte los valores predeterminados para el resto de opciones y haga clic en ",(0,r.kt)("strong",{parentName:"p"},"Call")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"An image of a Flipper transaction",src:t(31120).Z,width:"2750",height:"1952"})),(0,r.kt)("p",null,"Si la transacci\xf3n fue exitosa, deber\xedamos poder volver a llamar a la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," y ver nuestro almacenamiento actualizado:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"An image of Flipper RPC call with true",src:t(48509).Z,width:"2750",height:"1952"})),(0,r.kt)("p",null,"Woohoo! Has desplegado tu primer smart contract!"),(0,r.kt)("h2",{id:"usando-cargo-contract"},"Usando ",(0,r.kt)("inlineCode",{parentName:"h2"},"cargo-contract")),(0,r.kt)("p",null,"\xa1Tambi\xe9n es posible llamar a un contrato desde la l\xednea de comandos!"),(0,r.kt)("h3",{id:"1-funci\xf3n-get-1"},"1. funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"h3"},"get()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo contract build\ncargo contract upload --suri //Alice\n\ncargo contract instantiate --suri //Alice --args true\n# El output de este comando contendr\xe1 la direcci\xf3n del contrato,\n# usa esta direcci\xf3n en la siguiente instrucci\xf3n\n\ncargo contract call --contract ... --message get --dry-run --suri //Alice\n")),(0,r.kt)("h3",{id:"2-funci\xf3n-flip-1"},"2. funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"h3"},"flip()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo contract call --contract ... --message flip --suri //Alice\n")))}p.isMDXComponent=!0},5885:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/events-3ee254176476948e9690a37cb5619b7e.svg"},99973:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/rpc-6fcc2dcb2d6b112e7cb2b75ba9e26524.svg"},69456:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/flipper-false-e8506dfd800a64c0d39ebc50ba2813e5.png"},48509:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/flipper-true-5647327602f44a9e51b710f7ece60c77.png"},31120:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/send-as-transaction-f551eeeeb6eee601202582d3405efc37.png"}}]);