"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[5844],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),s=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(i.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||l;return t?a.createElement(f,o(o({ref:n},u),{},{components:t})):a.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[d]="string"==typeof e?e:r,o[1]=c;for(var s=2;s<l;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7558:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const l={title:"2. Conectar Wallet",description:"Conectar una wallet mediante una extensi\xf3n de navegador"},o="Conectar Wallet",c={unversionedId:"frontend/connect-wallet",id:"frontend/connect-wallet",title:"2. Conectar Wallet",description:"Conectar una wallet mediante una extensi\xf3n de navegador",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/frontend/connect-wallet.md",sourceDirName:"frontend",slug:"/frontend/connect-wallet",permalink:"/es/frontend/connect-wallet",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/connect-wallet.md",tags:[],version:"current",frontMatter:{title:"2. Conectar Wallet",description:"Conectar una wallet mediante una extensi\xf3n de navegador"},sidebar:"reference",previous:{title:"1. Getting Started",permalink:"/es/frontend/getting-started"},next:{title:"Todos los Hooks",permalink:"/es/frontend/hooks"}},i={},s=[{value:"useWallet()",id:"usewallet",level:2}],u={toc:s},d="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"conectar-wallet"},"Conectar Wallet"),(0,r.kt)("p",null,"Un usuario primero debe dar permiso a una wallet mediante una extensi\xf3n de navegador para que su dApp pueda leer informaci\xf3n de cuentas o solicitar una firma para una transacci\xf3n. ",(0,r.kt)("inlineCode",{parentName:"p"},"useWallet()")," le da todo lo necesario para realizar esto. ",(0,r.kt)("inlineCode",{parentName:"p"},"useAllWallets()")," devuelve una lista de las extensiones soportadas para que el usuario pueda elegir qu\xe9 wallet le gustar\xeda conectar. e.g. Talisman, PolkadotJS, Subwallet, etc."),(0,r.kt)("h2",{id:"usewallet"},"useWallet()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useWallet, useAllWallets } from 'useink'\n\nexport const ConnectWallet = ({ children }) => {\n  const { account, connect, disconnect } = useWallet()\n  const wallets = useAllWallets()\n\n  if (!account) {\n    return (\n      <ul>\n        {wallets.map((w) => (\n          <li key={w.title}>\n            {w.installed ? (\n              <button onClick={() => connect(w.extensionName)}>\n                <img src={w.logo.src} alt={w.logo.alt} />\n                Connect to {w.title}\n              </button>\n            ) : (\n              <a href={w.installUrl}>\n                <img src={w.logo.src} alt={w.logo.alt} />\n                Install {w.title}\n              </a>\n            )}\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  return (\n    <>\n      <p>You are connected as {account?.name || account.address}</p>\n\n      <button onClick={disconnect}>Disonnect Wallet</button>\n    </>\n  )\n}\n")),(0,r.kt)("p",null,"Luego de que una wallet ha sido conectada, cualquier cambio de permisos en la wallet va a actualizar autom\xe1ticamente la aplicaci\xf3n en React.\n",(0,r.kt)("inlineCode",{parentName:"p"},"useWallet")," tiene muchas m\xe1s funcionalidades, incluyendo herramientas para cambiar la cuenta seleccionada. Usted puede ",(0,r.kt)("a",{parentName:"p",href:"/frontend/core/hooks/wallets/use-wallet"},"aprender m\xe1s sobre useWallet aqu\xed"),"."))}p.isMDXComponent=!0}}]);