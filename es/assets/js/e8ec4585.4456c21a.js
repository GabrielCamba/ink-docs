"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[7401],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>k});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),p=o,k=d["".concat(i,".").concat(p)]||d[p]||f[p]||a;return r?n.createElement(k,c(c({ref:t},u),{},{components:r})):n.createElement(k,c({ref:t},u))}));function k(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:o,c[1]=s;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},76564:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const a={title:"useBlockHeader",description:"A React hook for fetching block header information on each new block"},c="useBlockHeader",s={unversionedId:"frontend/react/hooks/substrate/use-block-header",id:"frontend/react/hooks/substrate/use-block-header",title:"useBlockHeader",description:"A React hook for fetching block header information on each new block",source:"@site/docs/frontend/react/hooks/substrate/use-block-header.md",sourceDirName:"frontend/react/hooks/substrate",slug:"/frontend/react/hooks/substrate/use-block-header",permalink:"/es/frontend/react/hooks/substrate/use-block-header",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/react/hooks/substrate/use-block-header.md",tags:[],version:"current",frontMatter:{title:"useBlockHeader",description:"A React hook for fetching block header information on each new block"},sidebar:"reference",previous:{title:"useTransfer",permalink:"/es/frontend/react/hooks/substrate/use-transfer"},next:{title:"useTimestampDate",permalink:"/es/frontend/react/hooks/substrate/use-timestamp-date"}},i={},l=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}],u={toc:l},d="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"useblockheader"},"useBlockHeader"),(0,o.kt)("p",null,"A React hook for fetching block header information on each new block. This hook is used\ninternally to trigger subscriptions when a block updates."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useBlockHeader } from 'useink'\n\nfunction Balances() {\n  // This will use the first chain in the configuration array (aka 'default chain')\n  const blockHeader = useBlockHeader() \n  // 'zeitgeist' must be configured in UseInkProvider\n  const zeitBlockHeader = useBlockHeader('zeitgeist')\n\n  return (\n    <ul>\n      <li>Current Block: {blockHeader?.blockNumber ? blockHeader.blockNumber : '--'}</li>\n      <li>Zeitgeist Current Block: {zeitBlockHeader?.blockNumber ? zeitBlockHeader.blockNumber : '--'}</li>\n    </ul>\n  )\n}\n")),(0,o.kt)("h2",{id:"return-value"},"Return Value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  blockNumber: number | undefined;\n  header: undefined | {\n    readonly parentHash: Hash;\n    readonly number: Compact<BlockNumber>;\n    readonly stateRoot: Hash;\n    readonly extrinsicsRoot: Hash;\n    readonly digest: Digest;\n  }\n} | undefined\n")))}f.isMDXComponent=!0}}]);