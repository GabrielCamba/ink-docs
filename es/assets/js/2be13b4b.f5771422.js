"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[8133],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>k});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=n.createContext({}),s=function(e){var a=n.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=s(e.components);return n.createElement(c.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(t),m=r,k=p["".concat(c,".").concat(m)]||p[m]||u[m]||l;return t?n.createElement(k,o(o({ref:a},d),{},{components:t})):n.createElement(k,o({ref:a},d))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var c in a)hasOwnProperty.call(a,c)&&(i[c]=a[c]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},88979:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=t(87462),r=(t(67294),t(3905));const l={title:"Llamadas Cross-Contract",slug:"/basics/cross-contract-calling",hide_title:!0},o=void 0,i={unversionedId:"basics/cross-contract-calling",id:"version-5.x/basics/cross-contract-calling",title:"Llamadas Cross-Contract",description:"En los contratos de ink! es posible llamar a mensajes y constructores de otros contratos on-chain.",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-5.x/basics/cross-contract-calling.md",sourceDirName:"basics",slug:"/basics/cross-contract-calling",permalink:"/es/5.x/basics/cross-contract-calling",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/versioned_docs/version-5.x/basics/cross-contract-calling.md",tags:[],version:"5.x",frontMatter:{title:"Llamadas Cross-Contract",slug:"/basics/cross-contract-calling",hide_title:!0},sidebar:"reference",previous:{title:"Definiciones Trait",permalink:"/es/5.x/basics/definiciones-trait"},next:{title:"Contratos Actualizables",permalink:"/es/5.x/basics/upgradeable-contracts"}},c={},s=[{value:"Referencias de Contrato",id:"referencias-de-contrato",level:2},{value:"Tutorial para <code>BasicContractRef</code>",id:"tutorial-para-basiccontractref",level:3},{value:"Preparaci\xf3n de <code>OtherContract</code>",id:"preparaci\xf3n-de-othercontract",level:4},{value:"Importando <code>OtherContract</code>",id:"importando-othercontract",level:4},{value:"Conectando <code>BasicContractRef</code>",id:"conectando-basiccontractref",level:4},{value:"Cargando <code>OtherContract</code>",id:"cargando-othercontract",level:4},{value:"Instanciando <code>OtherContract</code> a trav\xe9s de <code>BasicContractRef</code>",id:"instanciando-othercontract-a-trav\xe9s-de-basiccontractref",level:4},{value:"Llamando a <code>OtherContract</code> a trav\xe9s de <code>BasicContractRef</code>",id:"llamando-a-othercontract-a-trav\xe9s-de-basiccontractref",level:4},{value:"Builders",id:"builders",level:2},{value:"CreateBuilder",id:"createbuilder",level:3},{value:"CallBuilder",id:"callbuilder",level:3},{value:"CallBuilder: Call",id:"callbuilder-call",level:4},{value:"CallBuilder: DelegateCall",id:"callbuilder-delegatecall",level:4},{value:"Gesti\xf3n de errores del Builder",id:"gesti\xf3n-de-errores-del-builder",level:3}],d={toc:s},p="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(p,(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("img",{src:"/img/title/cross-contract.svg",className:"titlePic"}),(0,r.kt)("h1",{id:"llamadas-cross-contract"},"Llamadas Cross-Contract"),(0,r.kt)("p",null,"En los contratos de ink! es posible llamar a mensajes y constructores de otros contratos on-chain."),(0,r.kt)("p",null,"Existen varios enfoques para realizar estas llamadas Cross-Contract en ink!:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Referencias de Contrato (",(0,r.kt)("inlineCode",{parentName:"li"},"ContractRef"),")"),(0,r.kt)("li",{parentName:"ol"},"Builders (",(0,r.kt)("inlineCode",{parentName:"li"},"CreateBuilder")," y ",(0,r.kt)("inlineCode",{parentName:"li"},"CallBuilder"),")")),(0,r.kt)("p",null,"Las Referencias de Contrato s\xf3lo pueden utilizarse para llamadas Cross-Contract a otros contratos de ink!. Los Builders pueden utilizarse para realizar llamadas Cross-Contract a cualquier contrato Wasm, como los escritos en ink!, Solang o ask!."),(0,r.kt)("h2",{id:"referencias-de-contrato"},"Referencias de Contrato"),(0,r.kt)("p",null,"Las Referencias de Contrato se refieren a las structs generadas por el generador de c\xf3digo de ink! para las llamadas Cross-Contract."),(0,r.kt)("p",null,"Proporcionan a los desarrolladores una forma segura de interactuar con un contrato."),(0,r.kt)("p",null,"Una desventaja de su uso es que necesita importar el contrato al que desea llamar como una dependencia de su propio contrato."),(0,r.kt)("p",null,"Si quiere interactuar con un contrato que ya est\xe1 on-chain, tendr\xe1s que utilizar el enfoque de los ",(0,r.kt)("a",{parentName:"p",href:"/basics/cross-contract-calling#builders"},(0,r.kt)("inlineCode",{parentName:"a"},"Builders")),"."),(0,r.kt)("h3",{id:"tutorial-para-basiccontractref"},"Tutorial para ",(0,r.kt)("inlineCode",{parentName:"h3"},"BasicContractRef")),(0,r.kt)("p",null,"Recorreremos el ejemplo de ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/ink/tree/master/integration-tests/basic_contract_caller"},(0,r.kt)("inlineCode",{parentName:"a"},"basic_contract_ref"))," para demostrar c\xf3mo funcionan las llamadas Cross-Contract utilizando Referencias de Contratos."),(0,r.kt)("p",null,"El flujo general de trabajo ser\xe1:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Preparar ",(0,r.kt)("inlineCode",{parentName:"li"},"OtherContract")," para ser importado en otros contratos"),(0,r.kt)("li",{parentName:"ol"},"Importar ",(0,r.kt)("inlineCode",{parentName:"li"},"OtherContract")," en ",(0,r.kt)("inlineCode",{parentName:"li"},"BasicContractRef")),(0,r.kt)("li",{parentName:"ol"},"Cargar ",(0,r.kt)("inlineCode",{parentName:"li"},"OtherContract")," on-chain"),(0,r.kt)("li",{parentName:"ol"},"Instanciar ",(0,r.kt)("inlineCode",{parentName:"li"},"OtherContract")," usando ",(0,r.kt)("inlineCode",{parentName:"li"},"BasicContractRef")),(0,r.kt)("li",{parentName:"ol"},"Llamar ",(0,r.kt)("inlineCode",{parentName:"li"},"OtherContract")," usando ",(0,r.kt)("inlineCode",{parentName:"li"},"BasicContractRef"))),(0,r.kt)("h4",{id:"preparaci\xf3n-de-othercontract"},"Preparaci\xf3n de ",(0,r.kt)("inlineCode",{parentName:"h4"},"OtherContract")),(0,r.kt)("p",null,"Debemos asegurarnos de que la Referencia de Contrato generada por ink! para ",(0,r.kt)("inlineCode",{parentName:"p"},"OtherContract")," est\xe9 disponible para otras partes del c\xf3digo."),(0,r.kt)("p",null,"Para ello, re-exportaremos la Referencia de Contrato como se indica a continuaci\xf3n:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"pub use self::other_contract::OtherContractRef;\n")),(0,r.kt)("h4",{id:"importando-othercontract"},"Importando ",(0,r.kt)("inlineCode",{parentName:"h4"},"OtherContract")),(0,r.kt)("p",null,"A continuaci\xf3n, tenemos que importar ",(0,r.kt)("inlineCode",{parentName:"p"},"OtherContract")," a nuestro contrato ",(0,r.kt)("inlineCode",{parentName:"p"},"BasicContractRef"),"."),(0,r.kt)("p",null,"Primero, a\xf1adiremos las siguientes l\xedneas a nuestro archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"Cargo.toml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'# En `basic_contract_ref/Cargo.toml`\n\nother_contract = { path = "other_contract", default-features = false, features = ["ink-as-dependency"] }\n\n# -- snip --\n\n[features]\ndefault = ["std"]\nstd = [\n    "ink/std",\n    # -- snip --\n    "other_contract/std",\n]\n')),(0,r.kt)("p",null,"Hay dos cosas a tener en cuenta:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Si no especificamos la caracter\xedstica ",(0,r.kt)("inlineCode",{parentName:"li"},"ink-as-dependency")," terminaremos con errores de vinculaci\xf3n."),(0,r.kt)("li",{parentName:"ol"},"Si no habilitamos la caracter\xedstica ",(0,r.kt)("inlineCode",{parentName:"li"},"std")," para construcciones ",(0,r.kt)("inlineCode",{parentName:"li"},"std")," no podremos generar los metadatos de nuestro contrato.")),(0,r.kt)("h4",{id:"conectando-basiccontractref"},"Conectando ",(0,r.kt)("inlineCode",{parentName:"h4"},"BasicContractRef")),(0,r.kt)("p",null,"En primer lugar, importaremos la Referencia de Contrato de ",(0,r.kt)("inlineCode",{parentName:"p"},"OtherContract"),", y declararemos que la referencia forma parte de nuestra estructura de almacenamiento."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"// En `basic_contract_ref/lib.rs`\n\nuse other_contract::OtherContractRef;\n\n#[ink(storage)]\npub struct BasicContractRef {\n    other_contract: OtherContractRef,\n}\n")),(0,r.kt)("p",null,"A continuaci\xf3n, a\xf1adiremos una forma de instanciar ",(0,r.kt)("inlineCode",{parentName:"p"},"OtherContract"),". Lo haremos desde el constructor de nuestro contrato."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"// En `basic_contract_ref/lib.rs`\n\n#[ink(constructor)]\npub fn new(other_contract_code_hash: Hash) -> Self {\n    let other_contract = OtherContractRef::new(true)\n        .code_hash(other_contract_code_hash)\n        .endowment(0)\n        .salt_bytes([0xDE, 0xAD, 0xBE, 0xEF])\n        .instantiate();\n\n    Self { other_contract }\n}\n")),(0,r.kt)("p",null,"Tenga en cuenta que para instanciar un contrato se necesitar\xe1 acceder al ",(0,r.kt)("inlineCode",{parentName:"p"},"code_hash")," cargado on-chain. Se detallar\xe1 esto m\xe1s adelante."),(0,r.kt)("p",null,"Una vez que se obtenga una referencia instanciada a ",(0,r.kt)("inlineCode",{parentName:"p"},"OtherContract"),", se puede llamar a sus mensajes como si fueran m\xe9todos normales de Rust."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"// En `basic_contract_ref/lib.rs`\n\n#[ink(message)]\npub fn flip_and_get(&mut self) -> bool {\n    self.other_contract.flip();\n    self.other_contract.get()\n}\n")),(0,r.kt)("h4",{id:"cargando-othercontract"},"Cargando ",(0,r.kt)("inlineCode",{parentName:"h4"},"OtherContract")),(0,r.kt)("p",null,"Necesitaremos el ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate-contracts-node"},(0,r.kt)("inlineCode",{parentName:"a"},"substrate-contracts-node")),"\nejecut\xe1ndose en segundo plano para los siguientes pasos."),(0,r.kt)("p",null,"Se puede cargar ",(0,r.kt)("inlineCode",{parentName:"p"},"OtherContract")," usando ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo-contract")," de la siguiente manera:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# En la carpeta `basic_contract_ref`\ncargo contract build --manifest-path other_contract/Cargo.toml\ncargo contract upload --manifest-path other_contract/Cargo.toml --suri //Alice\n")),(0,r.kt)("p",null,"Si tenemos \xe9xito, esto dar\xe1 como resultado un ",(0,r.kt)("inlineCode",{parentName:"p"},"code_hash")," similar a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Code hash "0x74a610235df4ff0161f0247e4c9d73934b70c1520d24ef843f9df9fcc3e63caa"\n')),(0,r.kt)("p",null,"Se puede utilizar este code ",(0,r.kt)("inlineCode",{parentName:"p"},"code_hash")," para instanciar nuestro contrato ",(0,r.kt)("inlineCode",{parentName:"p"},"BasicContractRef"),"."),(0,r.kt)("h4",{id:"instanciando-othercontract-a-trav\xe9s-de-basiccontractref"},"Instanciando ",(0,r.kt)("inlineCode",{parentName:"h4"},"OtherContract")," a trav\xe9s de ",(0,r.kt)("inlineCode",{parentName:"h4"},"BasicContractRef")),(0,r.kt)("p",null,"Primero tendremos que instanciar ",(0,r.kt)("inlineCode",{parentName:"p"},"BasicContractRef"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# En la carpeta `basic_contract_ref`\ncargo contract build\ncargo contract instantiate \\\n    --constructor new \\\n    --args 0x74a610235df4ff0161f0247e4c9d73934b70c1520d24ef843f9df9fcc3e63caa \\\n    --suri //Alice --salt $(date +%s)\n")),(0,r.kt)("p",null,"Si tenemos \xe9xito, esto dar\xe1 como resultado una direcci\xf3n de contrato para ",(0,r.kt)("inlineCode",{parentName:"p"},"BasicContractRef")," similar a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Contract 5CWz6Xnivp9PSoZq6qPRP8xVAShZgtNVGTCLCsq3qzqPV7Rq\n")),(0,r.kt)("h4",{id:"llamando-a-othercontract-a-trav\xe9s-de-basiccontractref"},"Llamando a ",(0,r.kt)("inlineCode",{parentName:"h4"},"OtherContract")," a trav\xe9s de ",(0,r.kt)("inlineCode",{parentName:"h4"},"BasicContractRef")),(0,r.kt)("p",null,"Por \xfaltimo, podemos llamar a los m\xe9todos de ",(0,r.kt)("inlineCode",{parentName:"p"},"OtherContract")," a trav\xe9s de ",(0,r.kt)("inlineCode",{parentName:"p"},"BasicContractRef")," de la siguiente manera:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cargo contract call --contract 5CWz6Xnivp9PSoZq6qPRP8xVAShZgtNVGTCLCsq3qzqPV7Rq \\\n    --message flip_and_get --suri //Alice --dry-run\n")),(0,r.kt)("p",null,"Lo que resultar\xe1 en algo similar a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Result Success!\nReverted false\nData Ok(true)\n")),(0,r.kt)("h2",{id:"builders"},"Builders"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/ink_env/latest/ink_env/call/struct.CreateBuilder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"CreateBuilder")),"\ny\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/ink_env/latest/ink_env/call/struct.CallBuilder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"CallBuilder")),"\nofrecen interfaces flexibles de bajo nivel para poder realizar llamadas entre contratos. El ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateBuilder")," permite instanciar contratos ya cargados, y el\n",(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder")," permite llamar mensajes en contratos instanciados."),(0,r.kt)("h3",{id:"createbuilder"},"CreateBuilder"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CreateBuilder")," ofrece una forma sencilla de ",(0,r.kt)("strong",{parentName:"p"},"instanciar")," un contrato. Tenga en cuenta que necesitar\xe1 que este contrato haya sido cargado previamente."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Para repasar la diferencia entre ",(0,r.kt)("inlineCode",{parentName:"p"},"upload")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"instantiate")," ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/deploy-your-contract"},"dirigirse aqu\xed"),".")),(0,r.kt)("p",null,"Para instanciar un contrato necesitaremos una referencia a un contrato, al igual que en\n",(0,r.kt)("a",{parentName:"p",href:"/basics/cross-contract-calling#referencias-de-contrato"},"la secci\xf3n anterior"),"."),(0,r.kt)("p",null,"A continuaci\xf3n se muestra un ejemplo de c\xf3mo instanciar un contrato utilizando el ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateBuilder"),". Vamos a:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"instanciar el contrato cargado con un ",(0,r.kt)("inlineCode",{parentName:"li"},"code_hash")," de ",(0,r.kt)("inlineCode",{parentName:"li"},"0x4242...")),(0,r.kt)("li",{parentName:"ul"},"sin l\xedmite de gas especificado (",(0,r.kt)("inlineCode",{parentName:"li"},"0")," significa ilimitado)"),(0,r.kt)("li",{parentName:"ul"},"enviando ",(0,r.kt)("inlineCode",{parentName:"li"},"10")," unidades de valor transferido a la instancia del contrato"),(0,r.kt)("li",{parentName:"ul"},"instanciando con el constructor ",(0,r.kt)("inlineCode",{parentName:"li"},"new")," "),(0,r.kt)("li",{parentName:"ul"},"con los siguientes argumentos",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"un ",(0,r.kt)("inlineCode",{parentName:"li"},"u8")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"42")),(0,r.kt)("li",{parentName:"ul"},"un ",(0,r.kt)("inlineCode",{parentName:"li"},"bool")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ul"},"un vector de 32 ",(0,r.kt)("inlineCode",{parentName:"li"},"u8")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"0x10")))),(0,r.kt)("li",{parentName:"ul"},"generar la direcci\xf3n (",(0,r.kt)("inlineCode",{parentName:"li"},"AccountId"),") utilizando los ",(0,r.kt)("inlineCode",{parentName:"li"},"salt_bytes")," especificados"),(0,r.kt)("li",{parentName:"ul"},"y esperar que devuelva un valor de tipo ",(0,r.kt)("inlineCode",{parentName:"li"},"MyContractRef"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use contract::MyContractRef;\nlet my_contract: MyContractRef = build_create::<MyContractRef>()\n    .code_hash(Hash::from([0x42; 32]))\n    .gas_limit(0)\n    .endowment(10)\n    .exec_input(\n        ExecutionInput::new(Selector::new(ink::selector_bytes!("new")))\n            .push_arg(42)\n            .push_arg(true)\n            .push_arg(&[0x10u8; 32])\n    )\n    .salt_bytes(&[0xDE, 0xAD, 0xBE, 0xEF])\n    .returns::<MyContractRef>()\n    .instantiate();\n')),(0,r.kt)("p",null,"Dado que ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateBuilder::instantiate()")," devuelve una referencia a un contrato, podemos utilizar esta referencia a un contrato para llamar a mensajes como en la\n",(0,r.kt)("a",{parentName:"p",href:"/basics/cross-contract-calling#referencias-de-contrato"},"secci\xf3n anterior"),"."),(0,r.kt)("h3",{id:"callbuilder"},"CallBuilder"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder")," te ofrece algunas maneras de llamar a mensajes desde otros contratos. Hay dos enfoques principales para esto: ",(0,r.kt)("inlineCode",{parentName:"p"},"Call"),"s y ",(0,r.kt)("inlineCode",{parentName:"p"},"DelegateCall"),"s. Cubriremos brevemente ambos aqu\xed."),(0,r.kt)("h4",{id:"callbuilder-call"},"CallBuilder: Call"),(0,r.kt)("p",null,"Al utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"Call"),"s, el ",(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder")," requiere un contrato ya instanciado."),(0,r.kt)("p",null,"Vimos un ejemplo de c\xf3mo utilizar el ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateBuilder")," para instanciar contratos en la\n",(0,r.kt)("a",{parentName:"p",href:"/basics/cross-contract-calling#referencias-de-contrato"},"secci\xf3n anterior"),"."),(0,r.kt)("p",null,"A continuaci\xf3n, veremos un ejemplo de c\xf3mo llamar a un contrato utilizando el ",(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder"),". Vamos a:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"hacer una ",(0,r.kt)("inlineCode",{parentName:"li"},"Call")," normal"),(0,r.kt)("li",{parentName:"ul"},"a un contrato en la direcci\xf3n ",(0,r.kt)("inlineCode",{parentName:"li"},"0x4242...")),(0,r.kt)("li",{parentName:"ul"},"sin especificar l\xedmite de gas (",(0,r.kt)("inlineCode",{parentName:"li"},"0")," significa ilimitado)"),(0,r.kt)("li",{parentName:"ul"},"enviar ",(0,r.kt)("inlineCode",{parentName:"li"},"10")," unidades de valor transferido a la instancia del contrato"),(0,r.kt)("li",{parentName:"ul"},"llamar al mensaje ",(0,r.kt)("inlineCode",{parentName:"li"},"flip")),(0,r.kt)("li",{parentName:"ul"},"con los siguientes argumentos",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"un ",(0,r.kt)("inlineCode",{parentName:"li"},"u8")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"42")),(0,r.kt)("li",{parentName:"ul"},"un ",(0,r.kt)("inlineCode",{parentName:"li"},"bool")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ul"},"un vector de 32 ",(0,r.kt)("inlineCode",{parentName:"li"},"u8")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"0x10")))),(0,r.kt)("li",{parentName:"ul"},"y esperar que devuelva un valor de tipo ",(0,r.kt)("inlineCode",{parentName:"li"},"bool"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let my_return_value = build_call::<DefaultEnvironment>()\n    .call(AccountId::from([0x42; 32]))\n    .gas_limit(0)\n    .transferred_value(10)\n    .exec_input(\n        ExecutionInput::new(Selector::new(ink::selector_bytes!("flip")))\n            .push_arg(42u8)\n            .push_arg(true)\n            .push_arg(&[0x10u8; 32])\n    )\n    .returns::<bool>()\n    .invoke();\n')),(0,r.kt)("p",null,"Nota:"),(0,r.kt)("p",null,"Los argumentos de los mensajes se codificar\xe1n en el orden en que se proporcionen al ",(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder"),".\nEsto significa que deben coincidir con el orden (y tipo) en que aparecen en la firma de la funci\xf3n."),(0,r.kt)("p",null,"No podr\xe1 obtener informaci\xf3n sobre esto en tiempo de compilaci\xf3n. S\xf3lo descubrir\xe1 que la llamada ha fallado en tiempo de ejecuci\xf3n."),(0,r.kt)("h4",{id:"callbuilder-delegatecall"},"CallBuilder: DelegateCall"),(0,r.kt)("p",null,"Tambi\xe9n puedes utilizar el ",(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder")," para crear llamadas utilizando la mec\xe1nica ",(0,r.kt)("inlineCode",{parentName:"p"},"DelegateCall"),".\nSi necesitas un repaso de lo que son las llamadas a delegados,\n",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/coinmonks/delegatecall-calling-another-contract-function-in-solidity-b579f804178c"},"consulta este art\xedculo"),"."),(0,r.kt)("p",null,"En el caso de ",(0,r.kt)("inlineCode",{parentName:"p"},"DelegateCall"),", no necesitamos un contrato ya instanciado. S\xf3lo necesitamos el ",(0,r.kt)("inlineCode",{parentName:"p"},"code_hash")," de un contrato subido."),(0,r.kt)("p",null,"A continuaci\xf3n se muestra un ejemplo de c\xf3mo realizar una llamada delegada a un contrato utilizando el ",(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder"),". Vamos a:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"hacer una ",(0,r.kt)("inlineCode",{parentName:"li"},"DelegateCall")),(0,r.kt)("li",{parentName:"ul"},"a un contrato ",(0,r.kt)("inlineCode",{parentName:"li"},"code_hash")," (\xa1no una direcci\xf3n de contrato!) de ",(0,r.kt)("inlineCode",{parentName:"li"},"0x4242...")),(0,r.kt)("li",{parentName:"ul"},"sin l\xedmite de gas especificado (",(0,r.kt)("inlineCode",{parentName:"li"},"0"),' significa "autom\xe1tico")'),(0,r.kt)("li",{parentName:"ul"},"enviar ",(0,r.kt)("inlineCode",{parentName:"li"},"10")," unidades de valor transferido a la instancia del contrato"),(0,r.kt)("li",{parentName:"ul"},"llamar al mensaje ",(0,r.kt)("inlineCode",{parentName:"li"},"flip")),(0,r.kt)("li",{parentName:"ul"},"con los siguientes argumentos",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"un ",(0,r.kt)("inlineCode",{parentName:"li"},"u8")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"42")),(0,r.kt)("li",{parentName:"ul"},"un ",(0,r.kt)("inlineCode",{parentName:"li"},"bool")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ul"},"un vector de 32 ",(0,r.kt)("inlineCode",{parentName:"li"},"u8")," con valor ",(0,r.kt)("inlineCode",{parentName:"li"},"0x10")))),(0,r.kt)("li",{parentName:"ul"},"y esperar que devuelva un ",(0,r.kt)("inlineCode",{parentName:"li"},"i32"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let my_return_value = build_call::<DefaultEnvironment>()\n    .delegate(ink::primitives::Hash::from([0x42; 32]))\n    .exec_input(\n        ExecutionInput::new(Selector::new(ink::selector_bytes!("flip")))\n            .push_arg(42u8)\n            .push_arg(true)\n            .push_arg(&[0x10u8; 32])\n    )\n    .returns::<i32>()\n    .invoke();\n')),(0,r.kt)("h3",{id:"gesti\xf3n-de-errores-del-builder"},"Gesti\xf3n de errores del Builder"),(0,r.kt)("p",null,"Tanto ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateBuilder")," como el ",(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder")," ofrecen gesti\xf3n de errores con los m\xe9todos ",(0,r.kt)("inlineCode",{parentName:"p"},"try_instantiate()")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"try_invoke()")," respectivamente."),(0,r.kt)("p",null,"Estos permiten a los desarrolladores de contratos gestionar dos tipos de errores:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Errores del entorno de ejecuci\xf3n subyacente (por ejemplo, el pallet ",(0,r.kt)("inlineCode",{parentName:"li"},"Contracts"),")"),(0,r.kt)("li",{parentName:"ol"},"Errores del lenguaje de programaci\xf3n (por ejemplo, ",(0,r.kt)("inlineCode",{parentName:"li"},"LangError"),"s)")),(0,r.kt)("p",null,"Consulte la documentaci\xf3n de\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/ink_env/latest/ink_env/call/struct.CreateBuilder.html#method.try_instantiate"},(0,r.kt)("inlineCode",{parentName:"a"},"try_instantiate")),",\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/ink_env/latest/ink_env/call/struct.CallBuilder.html#method.try_invoke-2"},(0,r.kt)("inlineCode",{parentName:"a"},"try_invoke")),",\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/ink_env/latest/ink_env/enum.Error.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ink::env::Error")),"\ny\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/ink/latest/ink/enum.LangError.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ink::LangError")),"\npara m\xe1s detalles sobre el manejo adecuado de errores."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Dado que el ",(0,r.kt)("inlineCode",{parentName:"p"},"CallBuilder")," s\xf3lo requiere el ",(0,r.kt)("inlineCode",{parentName:"p"},"AccountId")," de un contrato y el ",(0,r.kt)("inlineCode",{parentName:"p"},"selector")," de un mensaje, podemos llamar a contratos Solidity que est\xe9n compilados utilizando el compilador ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hyperledger/solang"},"Solang"),"\ny subidos a una chain que soporte ",(0,r.kt)("inlineCode",{parentName:"p"},"pallet-contracts"),".\nVea ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/xermicus/call_solidity"},"aqu\xed")," un ejemplo de c\xf3mo hacerlo."),(0,r.kt)("p",{parentName:"admonition"},"Por otro lado, las llamadas desde Solidity a ink! ",(0,r.kt)("strong",{parentName:"p"},"no")," est\xe1n soportadas por Solang, pero hay planes para implementarlo en el futuro.")))}u.isMDXComponent=!0}}]);